<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rjk_y1q_1bb">
 <title>Caching Schemas</title>
 <conbody>
  <p><indexterm>Schema Generator processor<indexterm>caching
                schemas</indexterm></indexterm><indexterm>caching schemas<indexterm>Schema
                    Generator</indexterm></indexterm>You can configure the Schema Generator to cache
            a number of schemas, and to apply the schemas to records based on the expression defined
            in the Cache Key Expression property.</p>
        <p>Caching schemas can improve performance when a set of records can logically use the exact
            same schema, and when the records include a value that can be used to determine the
            schema to use.</p>
        <p>For example, say your pipeline uses the JDBC Multitable Consumer to read from multiple
            database tables. The origin writes the names of the table used to generate each record
            to a jdbc.tables record header attribute. Let's assume that all data from each record
            comes from a single table. </p>
        <p>To use the schema associated with each record, you can configure the Cache Key Expression
            property as follows: <codeph>${record:attribute(jdbc.tables)}</codeph>. </p>
        <p>
            <note type="warning">Use schema caching with care - applying an incorrect schema to a
                record can cause errors when writing to destination systems.</note>
        </p>
 </conbody>
</concept>
